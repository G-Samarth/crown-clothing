{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired.');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {}\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Samarth Ghulyani/Desktop/WebDev/React-folder/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","then","dispatch","catch","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B;AACA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACJ,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC;AAEH,GALG,CAKH,OAAMG,KAAN,EAAY,CAER;;AAGDL,EAAAA,aAAa,CAACG,GAAd,GAAoBG,IAApB,CAAyBJ,QAAQ,IAAI;AACjC,UAAME,cAAc,GAAGV,+BAA+B,CAACQ,QAAD,CAAtD;AACAK,IAAAA,QAAQ,CAACZ,uBAAuB,CAACS,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGI,KAHH,CAGSH,KAAK,IAAIE,QAAQ,CAACX,uBAAuB,CAACS,KAAK,CAACI,OAAP,CAAxB,CAH1B;AAIH;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMpB,SAAS,CACXE,eAAe,CAACmB,uBADL,EAEXd,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery, call} from 'redux-saga/effects';\r\nimport {ShopActionTypes} from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n    yield console.log('I am fired.');\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        \r\n}catch(error){\r\n\r\n    }\r\n    \r\n\r\n    collectionRef.get().then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START, \r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}